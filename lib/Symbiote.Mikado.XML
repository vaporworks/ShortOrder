<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Symbiote.Mikado</name>
    </assembly>
    <members>
        <member name="M:Symbiote.Mikado.Extensions.MikadoContextExtensions.HandleBrokenRules``1(Symbiote.Core.UnitOfWork.IContext{``0},System.Action{``0,System.Collections.Generic.IList{Symbiote.Mikado.IBrokenRuleNotification}})">
            <summary>
            Extends IContext to allow for an Action to act upon the TActor instance and the list of rules that the TActor has broken
            </summary>
            <typeparam name="TActor">Must be a reference type - the Actor type on which action is being taken.</typeparam>
            <param name="context">The IContext instance.</param>
            <param name="brokenRulesHandler">Action that takes a TActor and list of IBrokenRuleNotification objects.</param>
            <returns>The IContext instance.</returns>
            <exception cref="T:Symbiote.Core.AssimilationException"></exception>
        </member>
        <member name="T:Symbiote.Mikado.Impl.DefaultRulesIndex">
            <summary>
            Out-of-the-box class that provides simple scan-and-load capability for loading
            rules and target types into the Rules collection
            </summary>
        </member>
        <member name="M:Symbiote.Mikado.Impl.DefaultRulesIndex.ScanAndLoadRules">
            <summary>
            Gets all instances of IRule types from the IoC container and builds
            up a list of the target types (the "T" in IRule&lt;T&gt;) and loads them
            in the Rules dictionary with rules assigned to that type (as well as assigning
            those rules to sub-types). 
            </summary>
        </member>
        <member name="M:Symbiote.Mikado.Impl.DefaultRulesIndex.FindRuleTargetType(System.Type)">
            <summary>
            Finds the type in the inheritance tree that closes the generic on the given IRule
            and returns the generic parameter type that the given IRule type targets
            </summary>
            <param name="ruleType">IRule type</param>
            <returns>Type object representing the Type which the IRule targets</returns>
        </member>
        <member name="P:Symbiote.Mikado.Impl.DefaultRulesIndex.Rules">
            <summary>
            Dictionary associating IRules with Types
            </summary>
        </member>
    </members>
</doc>
